#####################################################################################
2017.09.15 수업내용
#####################################################################################
1. git 사용 명령어

 git init
 git add *
 git commit -m "first commit"
 git config --global user.email "jssong80@naver.com"
 git config --global user.name "SongJunSoo"

2. 강사님 github 주소
 https://github.com/nashorn74/ProtoType/blob/
 master/app/src/main/res/layout/activity_main.xml


#####################################################################################
2017.09.16 수업내용
#####################################################################################

수업관련 사이트 :

1) http://json.parser.online.fr/ : json parser
2) POSTMAN : 크롬에서 확장프로그램 추가
3) http://troy.labs.daum.net/ : 모바일 해상도 보는 화면
4) 카카오 오븐 : 프로토 타입 만드는 사이트
5) https://github.com/nashorn74/ProtoType/
6) https://github.com/SongJunSoo/HoneyPrettyKidsLove
7) 모비즌 : 안드로이드 PC화면 미러링
<<<<<<< HEAD


향상 for문 사용
for(BankModel1 bank : bankmodel3.getBody())
{

}

#####################################################################################
2017.09.22 수업내용
#####################################################################################

1. 교재 184 page : margin, padding 차이점 나옴
2. 이미지 사이즈 줄이는 툴 : https://www.gimp.org/downloads/
3. 이미지는 100kbytes 전후
=======
>>>>>>> 7fb550924fa9ecda7ca0dc699fa913c8107a702d


<<<<<<< HEAD
=======
8)
>>>>>>> e94ae06d0315ede47cac06fb5fa0a4494f30dc18
향상 for문 사용
for(BankModel1 bank : bankmodel3.getBody())
{

}
<<<<<<< HEAD
=======

9) kenshi@nate.com / 김봉섭
>>>>>>> e94ae06d0315ede47cac06fb5fa0a4494f30dc18


#####################################################################################
2017.09.23(토요일) 수업내용
#####################################################################################

1. https://www.sublimetext.com/

서브 라임 에디터 
구글에서 sublime 	검색 

2. github에서 만든 폴더 내용 그대로 내 경로에 만들어 준다. 

git clone https://github.com/SongJunSoo/NodejsExam.git

3. nodejs : javascript 서버 프로그래밍 
   sublime : 무료 텍스트기 괜찮다
   github : social 소스 무료 저장 
   gimp  : 무료 이미지 관리 툴   
   MS빙번역기 무료 -> nodejs에서 export 모듈이 있어서 연동하면
                      쉽게 실시간 번역기 개발이 가능하다. 
   

4. nodejs 외부 모듈은 구글에서 "npm 모듈이름" 등으로 검색 

1) bing 번역 사용하기 
 npm bing translate 로 검색

2) 구글에서 npm 띄고 모듈명 검색

[1] npm install jade
[2] npm install ejs   

[3] npm install -g supervisor  : 소스가 변결될때 마다 자동으로 로그인 해준다.
                                 사용법 : supervisor request.response.js 
                                                      
[4] npm install -g forever     : 실행 시키고 자주 변경사항이 없을 때
                                 프로그램 멈추면 자동으로 실행해 준다. 
                                 로그를 남겨준다. 문제 생길때 

                                 사용법 : forever start request.response.js 
                                          forever list : 리스트 보기
                                          forever stop pid값  : stop 시키기 , list 명령어로 pid 값 확인
                                          cat c:\users\50088778\.forever\RYD0.log : 로그보기 

5. .gitignore 파일 생성 

/httpExam/node_modules 폴더 추가 , 해당 폴더는 github에 안올라간다. 
  
#################################################################################################
# 2017.09.29(토요일)
#################################################################################################

1. restFul api 생성 실습
 - 포스트맨을 사용하여 테스트 

#################################################################################################
# 2017.09.30(토요일)
#################################################################################################

1) mySQL 실습내용 

-- mySQL 설치시에 오류나는 것은 vcredist_x64 (1).exe 설치하여 해결 

create database restful;

create database restful;

use restful;

create table user (
 id integer primary key auto_increment,
 name text,
 age integer
);

2) mongodb 사용 

[1] mongo db 서버 기동 

50137436@50137436-PC MINGW64 ~
$ cd c:\mongodb

$ mkdir var

-- mongo db 실행 방법
$ ./bin/mongod -dbpath ./var

 ==> .\bin\mongod -dbpath .\var

2017-09-30T11:18:12.896+0900 I NETWORK  [thread1] waiting for connections on por                                             t 27017


[2] mongo db 클라이언트 접속 

50137436@50137436-PC MINGW64 ~/NodejsExam/restfulExam/node_modules (master)
$ cd c:\mongodb

50137436@50137436-PC MINGW64 /c/mongodb
$ ./bin/mongo

 ==> .\bin\mongo

MongoDB shell version v3.4.7
connecting to: mongodb://127.0.0.1:27017
MongoDB server version: 3.4.7


show dbs;
admin  0.000GB
local  0.000GB


[3] mongo db 사용 실습

50137436@50137436-PC MINGW64 /c/mongodb
$ ./bin/mongo
MongoDB shell version v3.4.7
connecting to: mongodb://127.0.0.1:27017
MongoDB server version: 3.4.7
show dbs
admin    0.000GB
local    0.000GB
restful  0.000GB
use restful
switched to db restful
show collections
messages
db.messages.find()
{ "_id" : ObjectId("59cf22459546791baca90110"), "sender_id" : "1", "receiver_id" : "2\n", "sender" : { "id" : 1             , "name" : "송준수" }, "receiver" : {  }, "message" : "안녕하세요", "created_at" : ISODate("2017-09-30T04:49:09             .232Z") }
{ "_id" : ObjectId("59cf22c66844d810708d642a"), "sender_id" : "1", "reciever_id" : null, "sender" : { "id" : 1,              "name" : "송준수" }, "reciever" : {  }, "message" : "안녕하세요", "created_at" : ISODate("2017-09-30T04:51:18.             163Z") }

#################################################################################################
# 2017.10.13(금요일)
#################################################################################################

$ git clone https://github.com/SongJunSoo/HoneyPrettyKidsLoveServer.git
 
-- express 모듈 전체적으로 설치 : -g 옵션
$ npm install -g express-generator


$ express HoneyPrettyKidsLoveServer/


$ express HoneyPrettyKidsLoveServer/

  warning: the default view engine will not be jade in future releases
  warning: use `--view=jade' or `--help' for additional options

destination is not empty, continue? [y/N] y

   create : HoneyPrettyKidsLoveServer/
   create : HoneyPrettyKidsLoveServer//package.json
   create : HoneyPrettyKidsLoveServer//app.js
   create : HoneyPrettyKidsLoveServer//views
   create : HoneyPrettyKidsLoveServer//views/index.jade
   create : HoneyPrettyKidsLoveServer//views/layout.jade
   create : HoneyPrettyKidsLoveServer//views/error.jade
   create : HoneyPrettyKidsLoveServer//routes
   create : HoneyPrettyKidsLoveServer//routes/index.js
   create : HoneyPrettyKidsLoveServer//routes/users.js
   create : HoneyPrettyKidsLoveServer//public
   create : HoneyPrettyKidsLoveServer//bin
   create : HoneyPrettyKidsLoveServer//bin/www
   create : HoneyPrettyKidsLoveServer//public/javascripts
   create : HoneyPrettyKidsLoveServer//public/images
   create : HoneyPrettyKidsLoveServer//public/stylesheets
   create : HoneyPrettyKidsLoveServer//public/stylesheets/style.css

   install dependencies:
     $ cd HoneyPrettyKidsLoveServer/ && npm install

   run the app:
     $ DEBUG=honeyprettykidsloveserver:* npm start

-- npm install 하면 package.jon을 보고 알아서 설치해 준다. 
-- npm install 명령어 
50137436@50137436-PC MINGW64 ~/HoneyPrettyKidsLoveServer (master)
$ npm install

-- 웹서버 실행 
$ node bin/www

50137436@50137436-PC MINGW64 ~/HoneyPrettyKidsLoveServer (master)
$ git add *
 
50137436@50137436-PC MINGW64 ~/HoneyPrettyKidsLoveServer (master)
$ git commit -m "Express Project Create"
[master ee32ea3] Express Project Create
 9 files changed, 197 insertions(+)
 create mode 100644 app.js
 create mode 100644 bin/www
 create mode 100644 package.json
 create mode 100644 public/stylesheets/style.css
 create mode 100644 routes/index.js
 create mode 100644 routes/users.js
 create mode 100644 views/error.jade
 create mode 100644 views/index.jade
 create mode 100644 views/layout.jade

50137436@50137436-PC MINGW64 ~/HoneyPrettyKidsLoveServer (master)
$ git push
Counting objects: 16, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (13/13), done.
Writing objects: 100% (16/16), 2.80 KiB | 574.00 KiB/s, done.
Total 16 (delta 1), reused 0 (delta 0)
remote: Resolving deltas: 100% (1/1), done.
To https://github.com/SongJunSoo/HoneyPrettyKidsLoveServer.git
   f220a4d..ee32ea3  master -> master


----------------------------------------------------------------------------------
AWS     : 아마존 서버 
jenkins :
heroku  : 클라우드 서비스 

----------------------------------------------------------------------------------

--> package.json 에 추가됨 

50137436@50137436-PC MINGW64 ~/HoneyPrettyKidsLoveServer (master)
$ npm install mysql --save

50137436@50137436-PC MINGW64 ~/HoneyPrettyKidsLoveServer (master)
$ npm install mongodb --save


#################################################################################################
# 2017.10.14(토요일)
#################################################################################################

1) github에서 new repository 생성 : AngularJSExamSJS

-- AngularJSExamSJS.git 복사
$ git clone https://github.com/SongJunSoo/AngularJSExamSJS.git

-- yo install : build 툴 설치
$ npm install -g yo

-- bower  : build 툴 설치 
$ npm install -g bower

-- grunt-cli  : build 툴  설치
$ npm install -g grunt-cli

-- generate angular  설치
$ npm install -g generator-angular

-- 기본 필요한 라이브러리 설치  
$ npm install

-- bower를 위한 기본 필요한 라이브러리 설치  
$ bower install

-- yo를 이용한 angular 프로젝트 생성 
$ yo angular AngularJsExamSJS

     _-----_
    |       |    ╭──────────────────────────╮
    |--(o)--|    │    Welcome to Yeoman,    │
   `---------´   │   ladies and gentlemen!  │
    ( _´U`_ )    ╰──────────────────────────╯
    /___A___\   /
     |  ~  |
   __'.___.'__
 ´   `  |° ´ Y `

Out of the box I include Bootstrap and some AngularJS recommended modules.

? Would you like to use Gulp (experimental) instead of Grunt? (y/N) n
? Would you like to use Sass (with Compass)? (Y/n) n
? Would you like to include Bootstrap? (Y/n) y
Enter
? Overwrite README.md? (ynaxdH) y
? Overwrite .gitignore? (ynaxdH) y


- 명령어 실행 순서 
No
No
Yes
Enter
Yes
Yes 

-- 서버 기동 
$ cd AngularJSExamSJS

grunt serve 

-- 빌드
$ cd AngularJSExamSJS
 
grunt build

dist 폴더의 파일과 폴더를 모두 복사
웹서버의 wwwroot에 붙여 넣기 
웹브라우저로 접속 확인 

-- nginx 웹서버 
-- nginx 웹서버 html폴더에 grunt build생성된 dist폴더의 내용을
   C:\nginx-1.12.1\html옮기고 브라우저에서 localhost로 접근하면 된다.


--------------------------------------------------------------------------------------------------------

50137436@50137436-PC MINGW64 ~/AngularJSExamSJS (master)
$ yo angular:controller login
   create app\scripts\controllers\login.js
   create test\spec\controllers\login.js

50137436@50137436-PC MINGW64 ~/AngularJSExamSJS (master)
$ yo angular:controller singup
   create app\scripts\controllers\singup.js
   create test\spec\controllers\singup.js

50137436@50137436-PC MINGW64 ~/AngularJSExamSJS (master)
$ yo angular:controller user-list
   create app\scripts\controllers\user-list.js
   create test\spec\controllers\user-list.js

50137436@50137436-PC MINGW64 ~/AngularJSExamSJS (master)
$ yo angular:controller user-detail
   create app\scripts\controllers\user-detail.js
   create test\spec\controllers\user-detail.js

50137436@50137436-PC MINGW64 ~/AngularJSExamSJS (master)
$ yo angular:controller user-withdraw
   create app\scripts\controllers\user-withdraw.js
   create test\spec\controllers\user-withdraw.js


※ bower 도 npm같은 툴이다. 

-- libarary 추가 
$ bower install angular-bootstrap --save

-- angular를 묶어 주기 편하게 해주는 library
$ bower install angular-ui-router --save



#################################################################################################
# 2017.10.27(금요일) 
#################################################################################################

#json-web-token을 사용하기 위해 아래 명령어 사용 

$ npm install json-web-token

구글 검색 - android httprequest post 방법 찾는 검색어 - 4번째 주소
android httprequesturl post parameter


[MySQL]

use restful;

drop table user;

create table user(
  id integer primary key auto_increment,
  user_id text,
  password text,
  name text,
  age integer 
);

select * from user;

create table user_login(
  id integer primary key auto_increment,
    user_real_id integer,
    token text,
    created_at datetime default current_timestamp
);

select * from user_login;

// editbox 키보드 타입 - 영문우선 으로 
android edittext keyboard type
 
// session-info, session-service, login 폴더 생성

50137436@50137436-PC MINGW64 ~/AngularJSExamSJS (master)
$ yo angular:service session-info
   create app\scripts\services\session-info.js
   create test\spec\services\session-info.js

50137436@50137436-PC MINGW64 ~/AngularJSExamSJS (master)
$ yo angular:service session-service
   create app\scripts\services\session-service.js
   create test\spec\services\session-service.js

50137436@50137436-PC MINGW64 ~/AngularJSExamSJS (master)
$ yo angular:controller login
identical app\scripts\controllers\login.js
identical test\spec\controllers\login.js
 